//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "extension_tag")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub desc: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::extension::Entity> for Entity {
    fn to() -> RelationDef {
        super::extension_tag_relation::Relation::Extension.def()
    }

    fn via() -> Option<RelationDef> {
        Some(
            super::extension_tag_relation::Relation::ExtensionTag
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
